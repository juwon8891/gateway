apiVersion: gateway.envoyproxy.io/v1alpha1
kind: EnvoyProxy
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"gateway.envoyproxy.io/v1alpha1","kind":"EnvoyProxy","metadata":{"annotations":{},"name":"proxy-config","namespace":"envoy-gateway-system"},"spec":{"provider":{"kubernetes":{"envoyDeployment":{"container":{"volumeMounts":[{"mountPath":"/var/run/ext-proc","name":"socket-dir"}]},"pod":{"volumes":[{"hostPath":{"path":"/var/run/ext-proc","type":""},"name":"socket-dir"}]}}},"type":"Kubernetes"},"shutdown":{"drainTimeout":"5s","minDrainDuration":"1s"},"telemetry":{"accessLog":{"settings":[{"format":{"text":"[%START_TIME%] %METADATA(ROUTE:envoy-gateway:resources)% \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n","type":"Text"},"matches":["'x-envoy-logged' in request.headers"],"sinks":[{"file":{"path":"/dev/stdout"},"type":"File"},{"openTelemetry":{"backendRefs":[{"name":"otel-collector","namespace":"monitoring","port":4317}],"resources":{"k8s.cluster.name":"envoy-gateway"}},"type":"OpenTelemetry"}]},{"sinks":[{"als":{"backendRefs":[{"name":"envoy-als","namespace":"monitoring","port":8080}],"type":"HTTP"},"type":"ALS"}]}]},"metrics":{"prometheus":{},"sinks":[{"openTelemetry":{"backendRefs":[{"name":"otel-collector","namespace":"monitoring","port":4317}]},"type":"OpenTelemetry"}]},"tracing":{"customTags":{"k8s.cluster.name":{"literal":{"value":"envoy-gateway"},"type":"Literal"},"k8s.namespace.name":{"environment":{"defaultValue":"envoy-gateway-system","name":"ENVOY_GATEWAY_NAMESPACE"},"type":"Environment"},"k8s.pod.name":{"environment":{"defaultValue":"-","name":"ENVOY_POD_NAME"},"type":"Environment"},"provider":{"literal":{"value":"otel"},"type":"Literal"}},"provider":{"backendRefs":[{"name":"otel-collector","namespace":"monitoring","port":4317}]}}}}}
  creationTimestamp: "2024-09-29T07:14:48Z"
  generation: 1
  name: proxy-config
  namespace: envoy-gateway-system
  resourceVersion: "78418"
  uid: d892749b-9b1c-4786-8b98-ee35a848e0e4
spec:
  logging:
    level:
      default: warn
  provider:
    kubernetes:
      envoyDeployment:
        container:
          volumeMounts:
          - mountPath: /var/run/ext-proc
            name: socket-dir
        pod:
          volumes:
          - hostPath:
              path: /var/run/ext-proc
              type: ""
            name: socket-dir
    type: Kubernetes
  shutdown:
    drainTimeout: 5s
    minDrainDuration: 1s
  telemetry:
    accessLog:
      settings:
      - format:
          text: |
            [%START_TIME%] %METADATA(ROUTE:envoy-gateway:resources)% "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% "%REQ(X-FORWARDED-FOR)%" "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
          type: Text
        matches:
        - '''x-envoy-logged'' in request.headers'
        sinks:
        - file:
            path: /dev/stdout
          type: File
        - openTelemetry:
            backendRefs:
            - group: ""
              kind: Service
              name: otel-collector
              namespace: monitoring
              port: 4317
            port: 4317
            resources:
              k8s.cluster.name: envoy-gateway
          type: OpenTelemetry
      - sinks:
        - als:
            backendRefs:
            - group: ""
              kind: Service
              name: envoy-als
              namespace: monitoring
              port: 8080
            type: HTTP
          type: ALS
    metrics:
      prometheus: {}
      sinks:
      - openTelemetry:
          backendRefs:
          - group: ""
            kind: Service
            name: otel-collector
            namespace: monitoring
            port: 4317
          port: 4317
        type: OpenTelemetry
    tracing:
      customTags:
        k8s.cluster.name:
          literal:
            value: envoy-gateway
          type: Literal
        k8s.namespace.name:
          environment:
            defaultValue: envoy-gateway-system
            name: ENVOY_GATEWAY_NAMESPACE
          type: Environment
        k8s.pod.name:
          environment:
            defaultValue: '-'
            name: ENVOY_POD_NAME
          type: Environment
        provider:
          literal:
            value: otel
          type: Literal
      provider:
        backendRefs:
        - group: ""
          kind: Service
          name: otel-collector
          namespace: monitoring
          port: 4317
        port: 4317
        type: OpenTelemetry
      samplingRate: 100
